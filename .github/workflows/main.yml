# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]
    tags:
      - 'v*'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Setup Arduino CLI
        uses: arduino/setup-arduino-cli@v1.1.1

      - name: Install platform
        run: |
          arduino-cli config init
          arduino-cli core install esp8266:esp8266 --additional-urls "https://arduino.esp8266.com/stable/package_esp8266com_index.json"
          arduino-cli core update-index
          arduino-cli board listall

      - name: Compile Sketch
        run: |
          arduino-cli compile -b esp8266:esp8266:nodemcuv2 ./Blink/Blink.ino --output-dir /tmp/output/firmware --verbose
          ls -l /tmp/output/firmware 
          
      - name: "cat package.json"
        run: cat ./package.json
        
      - name: "Setup Node.js"
        uses: "actions/setup-node@v1"
        with:
          node-version: 12
        
      - name: Automated Version Bump
        id: version-bump
        uses: "phips28/gh-action-bump-version@master"
        with:
          tag-prefix: ''
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: "cat package.json"
        run: cat ./package.json
        
      - name: Output Step
        id: version-output
        env:
          NEW_TAG: ${{ steps.version-bump.outputs.newTag }}
        run: echo "new tag $NEW_TAG"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version-output.env.NEW_TAG }}
          release_name: Release ${{ steps.version-output.env.NEW_TAG }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: /tmp/output/firmware/Blink.ino.bin
          asset_name: Blink.ino.bin
          asset_content_type: application/binary
